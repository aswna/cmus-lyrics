#!/usr/bin/env bash

CACHE_BASEDIR="${HOME}/.cache/cmus"
TOOLS_NEEDED=(
    cmus

    column
    cut
    grep
    perl
    pr
    sed
    vim
    wget
)

main() {
    check_tools_are_installed "${TOOLS_NEEDED[@]}"
    check_perl_module_escape_is_installed
    check_lyrics_site_is_available
    fetch_lyrics
}

check_tools_are_installed() {
    local tool
    for tool in "${@}"; do
        check_tool_is_installed "${tool}"
    done
}

check_tool_is_installed() {
    local tool="${1}"
    if ! type "${tool}" >/dev/null 2>&1; then
        printf "\033c"
        echo ""
        echo "${tool} is not installed!"
        echo ""
        echo "${tool} is a required dependency."
        echo "Please, install ${tool} using your package manager!"
        echo ""

        exit 1
    fi
}

check_perl_module_escape_is_installed() {
    perl -MURI::Escape -e 'print "$URI::Escape::VERSION\n";' > /dev/null 2>&1
    if [ "${?}" -ne 0 ]; then
        printf "\033c"
        echo ""
        echo "Perl module \"URI::Escape\" is not installed!"
        echo ""
        echo "Module \"URI::Escape\" is a required dependency!"
        echo "Please open the following link for more info,"
        echo ""
        echo -e '\e[38;5;82m'"http://stackoverflow.com/q/65865"
        echo ""
        tput sgr0

        exit 1
    fi
}

check_lyrics_site_is_available() {
    if ! wget -S --spider "https://makeitpersonal.co" 2>&1 | grep -q 'HTTP/1.1 200 OK'; then
        printf "\033c"
        echo ""
        echo "Cannot connect to the site \"makeitpersonal\"!"
        echo "Make sure your internet connection is active!"
        tput sgr0

        exit 1
    fi
}

fetch_lyrics() {
    while :; do
        printf "\033c"

        check_cmus_is_running
        check_cmus_is_playing

        local song_duration
        song_duration=$(cmus-remote -Q 2>/dev/null | grep -m 1 'duration' | cut -d ' ' -f 2)
        if [ -z "${song_duration}" ]; then
            print_header "[No song. Waiting...]"
            sleep 5
            continue
        fi

        local position_in_song
        position_in_song=$(cmus-remote -Q 2>/dev/null | grep -m 1 'position' | cut -d ' ' -f 2)
        local sleep_time
        sleep_time=$((song_duration - position_in_song))

        local artist
        artist=$(cmus-remote -Q 2>/dev/null | grep -m 1 'artist' | cut -d ' ' -f 3-)
        local title
        title=$(cmus-remote -Q 2>/dev/null | grep -m 1 'title' | cut -d ' ' -f 3-)
        local album
        album=$(cmus-remote -Q 2>/dev/null | grep -m 1 'album' | cut -d ' ' -f 3-)

        local header="$artist ($album) - $title"
        local cached_lyrics_file=""

        local lyrics
        if [ -n "${artist}" -a -n "${title}" ]; then
            if [ -n "${album}" ]; then
                local cache_dir="${CACHE_BASEDIR}/${artist}/${album}"
                mkdir -p "${cache_dir}"
                cached_lyrics_file="${cache_dir}/${title}"
            fi

            if [ -n "${cached_lyrics_file}" -a -r "${cached_lyrics_file}" ]; then
                lyrics=$(cat "${cached_lyrics_file}")
                header="${header} [from cache]"
            else
                local artist_escaped
                artist_escaped=$(echo "$artist" | perl -MURI::Escape -ne 'chomp;print uri_escape($_),"\n"')
                local title_escaped
                title_escaped=$(echo "$title" | perl -MURI::Escape -ne 'chomp;print uri_escape($_),"\n"')
                lyrics=$(wget --user-agent="Mozilla/5.0 Gecko/20100101" --no-check-certificate --quiet --timeout=30 -O - "https://makeitpersonal.co/lyrics?artist=$artist_escaped&title=$title_escaped")
                if [ -n "${lyrics}" -a "${lyrics}" != "Sorry, We don't have lyrics for this song yet." ]; then
                    printf "%s" "${lyrics}" > "${cached_lyrics_file}"
                fi
            fi
        else
            if [ -z "${artist}" ]; then
                artist="<missing artist>"
            fi
            if [ -z "${album}" ]; then
                album="<missing album>"
            fi
            if [ -z "${title}" ]; then
                title="<missing title>"
            fi
            header="$artist ($album) - $title"
            lyrics="<missing lyrics>"
        fi

        print_header "${header}"
        print_lyrics "${lyrics}"

        sleep "${sleep_time}"
    done
}

check_cmus_is_running() {
    while :; do
        local cmusq
        cmusq=$(cmus-remote -Q 2>/dev/null)
        if [ -z "${cmusq}" ]; then
            print_header "[Cmus is not running. To start cmus, type 'cmus' in your terminal. Waiting...]"
            sleep 5
            continue
        else
            break
        fi
    done
}

check_cmus_is_playing() {
    while :; do
        local cm_st
        cm_st=$(cmus-remote -Q 2>/dev/null | grep "stopped")
        if [ -n "${cm_st}" ]; then
            print_header "[Cmus is not playing anything. Waiting...]"
            sleep 5
            continue
        else
            break
        fi
    done
}

print_header() {
    printf "\033c"
    echo | pr --header="${*}" --length "$(tput lines)" --page-width "$(tput cols)" --date-format="" |
    sed 's/[[:space:]]\+Page[[:space:]]\+[[:digit:]]\+$//' |
    grep -v '^\s*$'
}

print_lyrics() {
    echo
    printf "%s\n" "${*}" |
    column -c "$(tput cols)" -e 2>/dev/null |
    sed 's/\s*$//' |
    vim - --not-a-term -esc '%p|q!' -u NONE |
    grep -v 'Vim: Reading from stdin...' |
    sed 's/^/ /'
}

main
